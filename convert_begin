@@ -70,7 +70,7 @@
            <event name="OnSetFocus"></event>
            <event name="OnSize"></event>
            <event name="OnUpdateUI"></event>
            <object class="wxMenuBar" expanded="0">
            <object class="wxMenuBar" expanded="1">
                <property name="bg">240,240,240</property>
                <property name="context_help"></property>
                <property name="enabled">1</property>
@@ -193,7 +193,7 @@
                        <property name="checked">0</property>
                        <property name="enabled">1</property>
                        <property name="help"></property>
                        <property name="id">wxID_ANY</property>
                        <property name="id">wxID_MENUOPTIONSOPTIONS</property>
                        <property name="kind">wxITEM_NORMAL</property>
                        <property name="label">&amp;Options...</property>
                        <property name="name">m_menuOptionsOptions</property>
@@ -2319,7 +2319,7 @@
                                                        <property name="font"></property>
                                                        <property name="hidden">0</property>
                                                        <property name="id">wxID_ANY</property>
                                                        <property name="label">&amp;Minimize to the system tray instead of the taskbar</property>
                                                        <property name="label">&amp;Minimize to the tray instead of the taskbar</property>
                                                        <property name="maximum_size"></property>
                                                        <property name="minimum_size"></property>
                                                        <property name="name">m_checkBoxMinimizeToTray</property>
@@ -2360,75 +2360,54 @@
                                                </object>
                                                <object class="sizeritem" expanded="1">
                                                    <property name="border">5</property>
                                                    <property name="flag">wxEXPAND</property>
                                                    <property name="proportion">1</property>
                                                    <object class="wxBoxSizer" expanded="1">
                                                    <property name="flag">wxALL|wxALIGN_CENTER_VERTICAL</property>
                                                    <property name="proportion">0</property>
                                                    <object class="wxCheckBox" expanded="1">
                                                        <property name="bg"></property>
                                                        <property name="checked">0</property>
                                                        <property name="context_help"></property>
                                                        <property name="enabled">1</property>
                                                        <property name="fg"></property>
                                                        <property name="font"></property>
                                                        <property name="hidden">0</property>
                                                        <property name="id">wxID_ANY</property>
                                                        <property name="label">M&amp;inimize to the tray on close</property>
                                                        <property name="maximum_size"></property>
                                                        <property name="minimum_size"></property>
                                                        <property name="name">bSizer101</property>
                                                        <property name="orient">wxHORIZONTAL</property>
                                                        <property name="permission">none</property>
                                                        <object class="sizeritem" expanded="1">
                                                            <property name="border">5</property>
                                                            <property name="flag"></property>
                                                            <property name="proportion">0</property>
                                                            <object class="spacer" expanded="1">
                                                                <property name="height">0</property>
                                                                <property name="permission">protected</property>
                                                                <property name="width">16</property>
                                                            </object>
                                                        </object>
                                                        <object class="sizeritem" expanded="1">
                                                            <property name="border">5</property>
                                                            <property name="flag">wxALL|wxALIGN_CENTER_VERTICAL</property>
                                                            <property name="proportion">0</property>
                                                            <object class="wxCheckBox" expanded="1">
                                                                <property name="bg"></property>
                                                                <property name="checked">0</property>
                                                                <property name="context_help"></property>
                                                                <property name="enabled">1</property>
                                                                <property name="fg"></property>
                                                                <property name="font"></property>
                                                                <property name="hidden">0</property>
                                                                <property name="id">wxID_ANY</property>
                                                                <property name="label">Mi&amp;nimize to system tray on close</property>
                                                                <property name="maximum_size"></property>
                                                                <property name="minimum_size"></property>
                                                                <property name="name">m_checkBoxMinimizeOnClose</property>
                                                                <property name="permission">protected</property>
                                                                <property name="pos"></property>
                                                                <property name="size"></property>
                                                                <property name="style"></property>
                                                                <property name="subclass"></property>
                                                                <property name="tooltip"></property>
                                                                <property name="window_extra_style"></property>
                                                                <property name="window_name"></property>
                                                                <property name="window_style"></property>
                                                                <event name="OnChar"></event>
                                                                <event name="OnCheckBox"></event>
                                                                <event name="OnEnterWindow"></event>
                                                                <event name="OnEraseBackground"></event>
                                                                <event name="OnKeyDown"></event>
                                                                <event name="OnKeyUp"></event>
                                                                <event name="OnKillFocus"></event>
                                                                <event name="OnLeaveWindow"></event>
                                                                <event name="OnLeftDClick"></event>
                                                                <event name="OnLeftDown"></event>
                                                                <event name="OnLeftUp"></event>
                                                                <event name="OnMiddleDClick"></event>
                                                                <event name="OnMiddleDown"></event>
                                                                <event name="OnMiddleUp"></event>
                                                                <event name="OnMotion"></event>
                                                                <event name="OnMouseEvents"></event>
                                                                <event name="OnMouseWheel"></event>
                                                                <event name="OnPaint"></event>
                                                                <event name="OnRightDClick"></event>
                                                                <event name="OnRightDown"></event>
                                                                <event name="OnRightUp"></event>
                                                                <event name="OnSetFocus"></event>
                                                                <event name="OnSize"></event>
                                                                <event name="OnUpdateUI"></event>
                                                            </object>
                                                        </object>
                                                        <property name="name">m_checkBoxMinimizeOnClose</property>
                                                        <property name="permission">protected</property>
                                                        <property name="pos"></property>
                                                        <property name="size"></property>
                                                        <property name="style"></property>
                                                        <property name="subclass"></property>
                                                        <property name="tooltip"></property>
                                                        <property name="window_extra_style"></property>
                                                        <property name="window_name"></property>
                                                        <property name="window_style"></property>
                                                        <event name="OnChar"></event>
                                                        <event name="OnCheckBox"></event>
                                                        <event name="OnEnterWindow"></event>
                                                        <event name="OnEraseBackground"></event>
                                                        <event name="OnKeyDown"></event>
                                                        <event name="OnKeyUp"></event>
                                                        <event name="OnKillFocus"></event>
                                                        <event name="OnLeaveWindow"></event>
                                                        <event name="OnLeftDClick"></event>
                                                        <event name="OnLeftDown"></event>
                                                        <event name="OnLeftUp"></event>
                                                        <event name="OnMiddleDClick"></event>
                                                        <event name="OnMiddleDown"></event>
                                                        <event name="OnMiddleUp"></event>
                                                        <event name="OnMotion"></event>
                                                        <event name="OnMouseEvents"></event>
                                                        <event name="OnMouseWheel"></event>
                                                        <event name="OnPaint"></event>
                                                        <event name="OnRightDClick"></event>
                                                        <event name="OnRightDown"></event>
                                                        <event name="OnRightUp"></event>
                                                        <event name="OnSetFocus"></event>
                                                        <event name="OnSize"></event>
                                                        <event name="OnUpdateUI"></event>
                                                    </object>
                                                </object>
                                                <object class="sizeritem" expanded="1">
                                     @@ -85,14 +85,14 @@ void RandAddSeed()

void RandAddSeedPerfmon()
{
#ifdef __WXMSW__
    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom
    // This can take up to 2 seconds, so only do it every 10 minutes
    static int64 nLastPerfmon;
    if (GetTime() < nLastPerfmon + 10 * 60)
        return;
    nLastPerfmon = GetTime();

#ifdef __WXMSW__
    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom
    // Seed with the entire set of perfmon data
    unsigned char pdata[250000];
    memset(pdata, 0, sizeof(pdata));
@@ -109,9 +109,30 @@ void RandAddSeedPerfmon()

        printf("%s RandAddSeed() %d bytes\n", DateTimeStrFormat("%x %H:%M:%S", GetTime()).c_str(), nSize);
    }
#else
    printf("%s RandAddSeed()\n", DateTimeStrFormat("%x %H:%M:%S", GetTime()).c_str());
#endif
}

uint64 GetRand(uint64 nMax)
{
    if (nMax == 0)
        return 0;

    // The range of the random source must be a multiple of the modulus
    // to give every possible output value an equal possibility
    uint64 nRange = (UINT64_MAX / nMax) * nMax;
    uint64 nRand = 0;
    do
        RAND_bytes((unsigned char*)&nRand, sizeof(nRand));
    while (nRand >= nRange);
    return (nRand % nMax);
}








@@ -449,28 +470,6 @@ string GetDataDir()



uint64 GetRand(uint64 nMax)
{
    if (nMax == 0)
        return 0;

    // The range of the random source must be a multiple of the modulus
    // to give every possible output value an equal possibility
    uint64 nRange = (_UI64_MAX / nMax) * nMax;
    uint64 nRand = 0;
    do
        RAND_bytes((unsigned char*)&nRand, sizeof(nRand));
    while (nRand >= nRange);
    return (nRand % nMax);
}










//
@@ -483,7 +482,6 @@ uint64 GetRand(uint64 nMax)
// note: NTP isn't implemented yet, so until then we just use the median
//  of other nodes clocks to correct ours.
//

int64 GetTime()
{
    return time(NULL);
    @@ -54,9 +54,13 @@ inline T& REF(const T& val)
    return (T&)val;
}

#ifndef __WXMSW__
#define _UI64_MAX           UINT64_MAX
#define _I64_MAX            INT64_MAX
#ifdef __WXMSW__
#define MSG_NOSIGNAL        0
#define MSG_DONTWAIT        0
#define UINT64_MAX          _UI64_MAX
#define INT64_MAX           _I64_MAX
#define INT64_MIN           _I64_MIN
#else
#define WSAGetLastError()   errno
#define WSAEWOULDBLOCK      EWOULDBLOCK
#define WSAEMSGSIZE         EMSGSIZE
@@ -74,18 +78,6 @@ typedef u_int SOCKET;
#define MAX_PATH            1024
#define Sleep(n)            wxMilliSleep(n)
#define Beep(n1,n2)         (0)
inline int _beginthread(void(*pfn)(void*), unsigned nStack, void* parg) { thread(bind(pfn, parg)); return 0; }
inline void _endthread() { pthread_exit(NULL); }
inline int GetCurrentThread() { return 0; }
// threads are processes on linux, so setpriority affects just the one thread
inline void SetThreadPriority(int nThread, int nPriority) { setpriority(PRIO_PROCESS, getpid(), nPriority); }
#define THREAD_PRIORITY_LOWEST          PRIO_MIN
#define THREAD_PRIORITY_BELOW_NORMAL    2
#define THREAD_PRIORITY_NORMAL          0
#define THREAD_PRIORITY_ABOVE_NORMAL    0
#endif
#ifndef MSG_NOSIGNAL
#define MSG_NOSIGNAL        0
#endif


@@ -133,6 +125,7 @@ void AddTimeData(unsigned int ip, int64 nTime);




// Wrapper to automatically initialize critical sections
class CCriticalSection
{
@@ -201,8 +194,6 @@ public:





inline int OutputDebugStringF(const char* pszFormat, ...)
{
    int ret = 0;
@@ -498,3 +489,83 @@ inline uint160 Hash160(const vector<unsigned char>& vch)
    RIPEMD160((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);
    return hash2;
}











// Note: It turns out we might have been able to use boost::thread
// by using TerminateThread(boost::thread.native_handle(), 0);
#ifdef __WXMSW__
typedef HANDLE pthread_t;

inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=false)
{
    DWORD nUnused = 0;
    HANDLE hthread =
        CreateThread(
            NULL,                        // default security
            0,                           // inherit stack size from parent
            (LPTHREAD_START_ROUTINE)pfn, // function pointer
            parg,                        // argument
            0,                           // creation option, start immediately
            &nUnused);                   // thread identifier
    if (hthread == NULL)
    {
        printf("Error: CreateThread() returned %d\n", GetLastError());
        return (pthread_t)0;
    }
    if (!fWantHandle)
    {
        CloseHandle(hthread);
        return (pthread_t)-1;
    }
    return hthread;
}

inline void SetThreadPriority(int nPriority)
{
    SetThreadPriority(GetCurrentThread(), nPriority);
}
#else
inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=false)
{
    pthread_t hthread = 0;
    int ret = pthread_create(&hthread, NULL, (void*(*)(void*))pfn, parg);
    if (ret != 0)
    {
        printf("Error: pthread_create() returned %d\n", ret);
        return (pthread_t)0;
    }
    if (!fWantHandle)
        return (pthread_t)-1;
    return hthread;
}

#define THREAD_PRIORITY_LOWEST          PRIO_MIN
#define THREAD_PRIORITY_BELOW_NORMAL    2
#define THREAD_PRIORITY_NORMAL          0
#define THREAD_PRIORITY_ABOVE_NORMAL    0

inline void SetThreadPriority(int nPriority)
{
    // threads are processes on linux, so PRIO_PROCESS affects just the one thread
    setpriority(PRIO_PROCESS, getpid(), nPriority);
}

inline bool TerminateThread(pthread_t hthread, unsigned int nExitCode)
{
    return (pthread_cancel(hthread) == 0);
}

inline void ExitThread(unsigned int nExitCode)
{
    pthread_exit((void*)nExitCode);
}
#endif
