@@ -139,7 +139,7 @@ void DBFlush(bool fShutdown)
{
    // Flush log data to the actual data file
    //  on all files that are not in use
    printf("DBFlush(%s)\n", fShutdown ? "true" : "false");
    printf("DBFlush(%s)%s\n", fShutdown ? "true" : "false", fDbEnvInit ? "" : " db not started");
    if (!fDbEnvInit)
        return;
    CRITICAL_BLOCK(cs_db)
   @@ -42,8 +42,6 @@ map<uint160, vector<unsigned char> > mapPubKeys;
CCriticalSection cs_mapKeys;
CKey keyUser;

int nDropMessagesTest = 0;

// Settings
int fGenerateBitcoins = false;
int64 nTransactionFee = 0;
@@ -1721,9 +1719,9 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)
    static map<unsigned int, vector<unsigned char> > mapReuseKey;
    RandAddSeedPerfmon();
    printf("received: %s (%d bytes)\n", strCommand.c_str(), vRecv.size());
    if (nDropMessagesTest > 0 && GetRand(nDropMessagesTest) == 0)
    if (mapArgs.count("-dropmessagestest") && GetRand(atoi(mapArgs["-dropmessagestest"])) == 0)
    {
        printf("dropmessages DROPPING RECV MESSAGE\n");
        printf("dropmessagestest DROPPING RECV MESSAGE\n");
        return true;
    }

@@ -2315,6 +2313,8 @@ void BitcoinMiner()
            Sleep(1000);
            if (fShutdown)
                return;
            if (!fGenerateBitcoins)
                return;
        }

        unsigned int nTransactionsUpdatedLast = nTransactionsUpdated;
        @@ -34,7 +34,6 @@ extern int nBestHeight;
extern uint256 hashBestChain;
extern CBlockIndex* pindexBest;
extern unsigned int nTransactionsUpdated;
extern int nDropMessagesTest;

// Settings
extern int fGenerateBitcoins;
